package com.casapazmino.fulltime.seguridad.model;
// Generated 10/01/2011 11:40:10 PM by Hibernate Tools 3.2.2.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.validator.Future;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

import com.casapazmino.fulltime.model.DetalleTipoParametro;

/**
 * Usuarios generated by hbm2java
 */
@Entity
@Table(name = "usuarios")
public class Usuarios implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private Long id;
	private String usuario;
	private String contrasena;
	private Date fechaCreacion;
	private DetalleTipoParametro estado;
	private Date fechaVencimiento;
	private Set<Auditoria> auditorias = new HashSet<Auditoria>(0);
	private Set<UsuariosRoles> usuariosRoleses = new HashSet<UsuariosRoles>(0);

	public Usuarios() {
		estado=new DetalleTipoParametro();
	}

	public Usuarios(DetalleTipoParametro estado, String usuario,
			String contrasena, Date fechaCreacion, Date fechaVencimiento) {
		this.estado = estado;
		this.usuario = usuario;
		this.contrasena = contrasena;
		this.fechaCreacion = fechaCreacion;
		this.fechaVencimiento = fechaVencimiento;
	}
	public Usuarios(DetalleTipoParametro estado, String usuario,
			String contrasena, Date fechaCreacion, Date fechaVencimiento, 
			Set<Auditoria> auditorias, Set<UsuariosRoles> usuariosRoleses) {
		this.estado = estado;
		this.usuario = usuario;
		this.contrasena = contrasena;
		this.fechaCreacion = fechaCreacion;
		this.fechaVencimiento = fechaVencimiento;
		this.auditorias = auditorias;
		this.usuariosRoleses = usuariosRoleses;
	}
	
// Codigo que estaba Antes de generara la nueva base de datos 	
/*	public Usuarios(String usuario, String contrasena, Date fechaCreacion,
			DetalleTipoParametro estado, Date fechaVencimiento,
			Set<UsuariosRoles> usuariosRoleses) {
		this.usuario = usuario;
		this.contrasena = contrasena;
		this.fechaCreacion = fechaCreacion;
		this.estado = estado;
		this.fechaVencimiento = fechaVencimiento;
		this.usuariosRoleses = usuariosRoleses;
	}*/

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "usuario", length = 30, nullable=false)
	@Length(max = 30)
	@NotNull
	public String getUsuario() {
		return this.usuario;
	}

	public void setUsuario(String usuario) {
		this.usuario = usuario;
	}

	@Column(name = "contrasena", length = 100)
	@Length(max = 100)
	@NotNull
	public String getContrasena() {
		return this.contrasena;
	}

	public void setContrasena(String contrasena) {
		this.contrasena = contrasena;
	}
	@Temporal(TemporalType.DATE)
	@Column(name = "fecha_creacion", length = 10)
	@NotNull
	public Date getFechaCreacion() {
		return this.fechaCreacion;
	}

	public void setFechaCreacion(Date fechaCreacion) {
		this.fechaCreacion = fechaCreacion;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "estado", nullable = false)
	@NotNull
	public DetalleTipoParametro getEstado() {
		return this.estado;
	}

	public void setEstado(DetalleTipoParametro estado) {
		this.estado = estado;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha_vencimiento", length = 10)
	@NotNull
	@Future
	public Date getFechaVencimiento() {
		return this.fechaVencimiento;
	}

	public void setFechaVencimiento(Date fechaVencimiento) {
		this.fechaVencimiento = fechaVencimiento;
	}
	
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "usuarios")
	public Set<UsuariosRoles> getUsuariosRoleses() {
		return this.usuariosRoleses;
	}

	public void setUsuariosRoleses(Set<UsuariosRoles> usuariosRoleses) {
		this.usuariosRoleses = usuariosRoleses;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarios")
	public Set<Auditoria> getAuditorias() {
		return this.auditorias;
	}

	public void setAuditorias(Set<Auditoria> auditorias) {
		this.auditorias = auditorias;
	}	
}
