package com.casapazmino.fulltime.model;
// Generated 24/11/2011 12:41:34 PM by Hibernate Tools 3.2.2.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.TableGenerator;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.validator.NotNull;

/**
 * EmpleadoPeriodoVacacion generated by hbm2java
 */
@Entity
@Table(name = "empleado_periodo_vacacion")
public class EmpleadoPeriodoVacacion implements java.io.Serializable {

	private static final long serialVersionUID = 6796114106975620681L;
	
	private Integer epvaId;
	private Empleado empleado;
	private HistLabo histLabo;	
	private String descripcion;
	private double horas;
	private Date fechaDesde;
	private double diasPerdidos;
	private double estado;
	private Set<SolicitudVacacion> solicitudVacacions = new HashSet<SolicitudVacacion>(
			0);
	private Set<Permiso> permisos = new HashSet<Permiso>(0);

	public EmpleadoPeriodoVacacion() {
	}

	public EmpleadoPeriodoVacacion(HistLabo histLabo, Empleado empleado, String descripcion,
			double horas, Date fechaDesde, double diasPerdidos) {
		this.histLabo = histLabo;
		this.empleado = empleado;
		this.descripcion = descripcion;
		this.horas = horas;
		this.fechaDesde = fechaDesde;
		this.diasPerdidos = diasPerdidos;
	}

	public EmpleadoPeriodoVacacion(HistLabo histLabo, Empleado empleado, String descripcion,
			double horas, Date fechaDesde, double diasPerdidos,
			Set<SolicitudVacacion> solicitudVacacions, Set<Permiso> permisos) {
		this.histLabo = histLabo;
		this.empleado = empleado;
		this.descripcion = descripcion;
		this.horas = horas;
		this.fechaDesde = fechaDesde;
		this.diasPerdidos = diasPerdidos;
		this.solicitudVacacions = solicitudVacacions;
		this.permisos = permisos;
	}

	@Id
	@TableGenerator(name = "IDEMPPERIODOVACA", table = "contadores", pkColumnName = "ID", pkColumnValue = "26", valueColumnName = "CONTADOR", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "IDEMPPERIODOVACA")
	@Column(name = "EPVA_ID", unique = true, nullable = false)
	public Integer getEpvaId() {
		return this.epvaId;
	}

	public void setEpvaId(Integer epvaId) {
		this.epvaId = epvaId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EMPL_ID", nullable = false)
	@NotNull
	public Empleado getEmpleado() {
		if (empleado == null) {
			empleado = new Empleado();
		}
			
		return this.empleado;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "HILA_ID", nullable = false)
	@NotNull
	public HistLabo getHistLabo() {
//		Modificado 21/05/2015
		if (this.histLabo == null){
			histLabo = new HistLabo(); 
		}
		return this.histLabo;
	}

	public void setHistLabo(HistLabo histLabo) {
		this.histLabo = histLabo;
	}	

	public void setEmpleado(Empleado empleado) {
		this.empleado = empleado;
	}

	@Column(name = "DESCRIPCION")
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@Column(name = "HORAS", nullable = false, precision = 6, scale = 4)
	@NotNull
	public double getHoras() {
		return this.horas;
	}

	public void setHoras(double horas) {
		this.horas = horas;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FECHA_DESDE", nullable = false, length = 19)
	@NotNull
	public Date getFechaDesde() {
		return this.fechaDesde;
	}

	public void setFechaDesde(Date fechaDesde) {
		this.fechaDesde = fechaDesde;
	}
	
	@Column(name = "DIAS_PERDIDOS", nullable = false, precision = 6, scale = 2)
	@NotNull
	public double getDiasPerdidos() {
		return diasPerdidos;
	}

	public void setDiasPerdidos(double diasPerdidos) {
		this.diasPerdidos = diasPerdidos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empleadoPeriodoVacacion")
	public Set<SolicitudVacacion> getSolicitudVacacions() {
		return this.solicitudVacacions;
	}

	public void setSolicitudVacacions(Set<SolicitudVacacion> solicitudVacacions) {
		this.solicitudVacacions = solicitudVacacions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empleadoPeriodoVacacion")
	public Set<Permiso> getPermisos() {
		return this.permisos;
	}

	public void setPermisos(Set<Permiso> permisos) {
		this.permisos = permisos;
	}

	@Column(name = "ESTADO", nullable = false)
	@NotNull
	public double getEstado() {
		return estado;
	}

	public void setEstado(double estado) {
		this.estado = estado;
	}

	@Override
	public String toString() {
		return "epvaId=" + epvaId + ", descripcion=" + descripcion + ", Dias="
				+ horas + ", fechaDesde=" + fechaDesde + ", diasPerdidos="
				+ diasPerdidos;
	}
	
}
