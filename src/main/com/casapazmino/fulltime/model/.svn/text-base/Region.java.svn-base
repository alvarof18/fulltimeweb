package com.casapazmino.fulltime.model;

// Generated 12-Jan-2011 12:14:41 PM by Hibernate Tools 3.2.4.GA

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Region generated by hbm2java
 */
@Entity
@Table(name = "region", catalog = "fulltime")
public class Region implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long regiId;
	private String codigo;
	private String descripcion;
	private Set<Provincia> provincias = new HashSet<Provincia>(0);

	public Region() {
	}

	public Region(String codigo, String descripcion) {
		this.codigo = codigo;
		this.descripcion = descripcion;
	}

	public Region(String codigo, String descripcion, Set<Provincia> provincias) {
		this.codigo = codigo;
		this.descripcion = descripcion;
		this.provincias = provincias;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "REGI_ID", unique = true, nullable = false)
	public Long getRegiId() {
		return this.regiId;
	}

	public void setRegiId(Long regiId) {
		this.regiId = regiId;
	}

	@Column(name = "CODIGO", nullable = false, length = 30)
	@NotNull
	@Length(max = 30)
	public String getCodigo() {
		return this.codigo;
	}

	public void setCodigo(String codigo) {
		this.codigo = codigo;
	}

	@Column(name = "DESCRIPCION", nullable = false)
	@NotNull
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "region")
	public Set<Provincia> getProvincias() {
		return this.provincias;
	}

	public void setProvincias(Set<Provincia> provincias) {
		this.provincias = provincias;
	}

}
