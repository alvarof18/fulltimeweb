package com.casapazmino.fulltime.model;

// Generated 12-Jan-2011 12:14:41 PM by Hibernate Tools 3.2.4.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.TableGenerator;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.validator.NotNull;

/**
 * Permiso generated by hbm2java
 */
@Entity
@Table(name = "permiso")
public class Permiso implements java.io.Serializable {

	private static final long serialVersionUID = -7773641606119242741L;

	private Long permId;
	private TipoPermiso tipoPermiso;
	private Empleado empleadoByEmpEmplId;
	private DetalleTipoParametro detalleTipoParametro;
	private Empleado empleadoByEmplId;
	private EmpleadoPeriodoVacacion empleadoPeriodoVacacion;
	private Integer numero;
	private Date fecha;
	private String lugar;
	private String observacion;
	private boolean timbra;
	private Date fechaDesde;
	private Date fechaHasta;
	private Integer dias;
	private Date horaSalida;
	private Date horaRetorno;
	private Double numeroHoras;
	private Double factor;
	private boolean trabajadas;
	private String estado;
	private boolean legalizado;

	private Integer nivel;
	private Integer aprobacion;
	private Integer nivelRequerido;

	private String estadoActual;

	private Integer diasLibres;

	private Set<PermisoAutorizacion> permisoAutorizacion = new HashSet<PermisoAutorizacion>(
			0);

	public Permiso() {
	}

	public Permiso(TipoPermiso tipoPermiso,
			DetalleTipoParametro detalleTipoParametro,
			Empleado empleadoByEmplId,
			EmpleadoPeriodoVacacion empleadoPeriodoVacacion, boolean timbra,
			Date fechaDesde, Date fechaHasta, Double factor,
			boolean trabajadas, String estado, boolean legalizado) {
		this.tipoPermiso = tipoPermiso;
		this.detalleTipoParametro = detalleTipoParametro;
		this.empleadoByEmplId = empleadoByEmplId;
		this.empleadoPeriodoVacacion = empleadoPeriodoVacacion;
		this.timbra = timbra;
		this.fechaDesde = fechaDesde;
		this.fechaHasta = fechaHasta;
		this.factor = factor;
		this.trabajadas = trabajadas;
		this.estado = estado;
		this.legalizado = legalizado;
	}

	public Permiso(TipoPermiso tipoPermiso, Empleado empleadoByEmpEmplId,
			DetalleTipoParametro detalleTipoParametro,
			Empleado empleadoByEmplId,
			EmpleadoPeriodoVacacion empleadoPeriodoVacacion, Integer numero,
			Date fecha, String lugar, String observacion, boolean timbra,
			Date fechaDesde, Date fechaHasta, Integer dias, Date horaSalida,
			Date horaRetorno, Double numeroHoras, Double factor,
			boolean trabajadas, String estado, boolean legalizado) {
		this.tipoPermiso = tipoPermiso;
		this.empleadoByEmpEmplId = empleadoByEmpEmplId;
		this.detalleTipoParametro = detalleTipoParametro;
		this.empleadoByEmplId = empleadoByEmplId;
		this.empleadoPeriodoVacacion = empleadoPeriodoVacacion;
		this.numero = numero;
		this.fecha = fecha;
		this.lugar = lugar;
		this.observacion = observacion;
		this.timbra = timbra;
		this.fechaDesde = fechaDesde;
		this.fechaHasta = fechaHasta;
		this.dias = dias;
		this.horaSalida = horaSalida;
		this.horaRetorno = horaRetorno;
		this.numeroHoras = numeroHoras;
		this.factor = factor;
		this.trabajadas = trabajadas;
		this.estado = estado;
		this.legalizado = legalizado;
	}

	@Id
	@TableGenerator(name = "IDPERMISO", table = "contadores", pkColumnName = "ID", pkColumnValue = "29", valueColumnName = "CONTADOR", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "IDPERMISO")
	@Column(name = "PERM_ID", unique = true, nullable = false)
	public Long getPermId() {
		return this.permId;
	}

	public void setPermId(Long permId) {
		this.permId = permId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TIPE_ID", nullable = false)
	@NotNull
	public TipoPermiso getTipoPermiso() {
		if (this.tipoPermiso == null) {
			this.tipoPermiso = new TipoPermiso();
		}
		return this.tipoPermiso;
	}

	public void setTipoPermiso(TipoPermiso tipoPermiso) {
		this.tipoPermiso = tipoPermiso;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EMP_EMPL_ID", nullable = false)
	@NotNull
	public Empleado getEmpleadoByEmpEmplId() {
		// if (empleadoByEmpEmplId == null) {
		// empleadoByEmpEmplId = new Empleado();
		// }

		return this.empleadoByEmpEmplId;
	}

	public void setEmpleadoByEmpEmplId(Empleado empleadoByEmpEmplId) {
		this.empleadoByEmpEmplId = empleadoByEmpEmplId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "AUTORIZADO", nullable = false)
	@NotNull
	public DetalleTipoParametro getDetalleTipoParametro() {
		return this.detalleTipoParametro;
	}

	public void setDetalleTipoParametro(
			DetalleTipoParametro detalleTipoParametro) {
		this.detalleTipoParametro = detalleTipoParametro;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EMPL_ID", nullable = false)
	@NotNull
	public Empleado getEmpleadoByEmplId() {
		if (empleadoByEmplId == null) {
			empleadoByEmplId = new Empleado();
		}
		return this.empleadoByEmplId;
	}

	public void setEmpleadoByEmplId(Empleado empleadoByEmplId) {
		this.empleadoByEmplId = empleadoByEmplId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EPVA_ID", nullable = false)
	@NotNull
	public EmpleadoPeriodoVacacion getEmpleadoPeriodoVacacion() {
		return this.empleadoPeriodoVacacion;
	}

	public void setEmpleadoPeriodoVacacion(
			EmpleadoPeriodoVacacion empleadoPeriodoVacacion) {
		this.empleadoPeriodoVacacion = empleadoPeriodoVacacion;
	}

	@Column(name = "NUMERO")
	public Integer getNumero() {
		return this.numero;
	}

	public void setNumero(Integer numero) {
		this.numero = numero;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FECHA", length = 19)
	public Date getFecha() {
		return this.fecha;
	}

	public void setFecha(Date fecha) {
		this.fecha = fecha;
	}

	@Column(name = "LUGAR")
	public String getLugar() {
		return this.lugar;
	}

	public void setLugar(String lugar) {
		this.lugar = lugar;
	}

	@Column(name = "OBSERVACION")
	public String getObservacion() {
		return this.observacion;
	}

	public void setObservacion(String observacion) {
		this.observacion = observacion;
	}

	@Column(name = "TIMBRA", nullable = false)
	@NotNull
	public boolean isTimbra() {
		return this.timbra;
	}

	public void setTimbra(boolean timbra) {
		this.timbra = timbra;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FECHA_DESDE", nullable = false, length = 19)
	@NotNull
	public Date getFechaDesde() {
		return this.fechaDesde;
	}

	public void setFechaDesde(Date fechaDesde) {
		this.fechaDesde = fechaDesde;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FECHA_HASTA", nullable = false, length = 19)
	@NotNull
	public Date getFechaHasta() {
		return this.fechaHasta;
	}

	public void setFechaHasta(Date fechaHasta) {
		this.fechaHasta = fechaHasta;
	}

	@Column(name = "DIAS", nullable = false)
	@NotNull
	public Integer getDias() {
		return this.dias;
	}

	public void setDias(Integer dias) {
		this.dias = dias;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "HORA_SALIDA", length = 19)
	public Date getHoraSalida() {
		return this.horaSalida;
	}

	public void setHoraSalida(Date horaSalida) {
		this.horaSalida = horaSalida;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "HORA_RETORNO", length = 19)
	public Date getHoraRetorno() {
		return this.horaRetorno;
	}

	public void setHoraRetorno(Date horaRetorno) {
		this.horaRetorno = horaRetorno;
	}

	@Column(name = "NUMERO_HORAS", precision = 6, scale = 2, nullable = false)
	@NotNull
	public Double getNumeroHoras() {
		return this.numeroHoras;
	}

	public void setNumeroHoras(Double numeroHoras) {
		this.numeroHoras = numeroHoras;
	}

	@Column(name = "FACTOR", nullable = false, precision = 6, scale = 4)
	@NotNull
	public Double getFactor() {
		return this.factor;
	}

	public void setFactor(Double factor) {
		this.factor = factor;
	}

	@Column(name = "TRABAJADAS", nullable = false)
	@NotNull
	public boolean isTrabajadas() {
		return this.trabajadas;
	}

	public void setTrabajadas(boolean trabajadas) {
		this.trabajadas = trabajadas;
	}

	@Column(name = "ESTADO")
	public String getEstado() {
		return this.estado;
	}

	public void setEstado(String estado) {
		this.estado = estado;
	}

	@Column(name = "LEGALIZADO", nullable = false)
	@NotNull
	public boolean isLegalizado() {
		return legalizado;
	}

	public void setLegalizado(boolean legalizado) {
		this.legalizado = legalizado;
	}

	@Override
	public String toString() {
		return "permId=" + permId + ", tipoPermiso="
				+ tipoPermiso.getDescripcion() + ", jefe="
				+ empleadoByEmpEmplId.getCodigoEmpleado() + ", aut="
				+ detalleTipoParametro.getDescripcion() + ", empleado="
				+ empleadoByEmplId.getCodigoEmpleado() + ", timbra=" + timbra
				+ ", Desde=" + fechaDesde + ", Hasta=" + fechaHasta
				+ ", Salida=" + horaSalida + ", Retorno=" + horaRetorno
				+ ", legal=" + legalizado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "permiso")
	public Set<PermisoAutorizacion> getPermisoAutorizacion() {
		return permisoAutorizacion;
	}

	public void setPermisoAutorizacion(
			Set<PermisoAutorizacion> permisoAutorizacion) {
		this.permisoAutorizacion = permisoAutorizacion;
	}

	@Column(name = "NIVEL", nullable = false)
	@NotNull
	public Integer getNivel() {
		return nivel;
	}

	public void setNivel(Integer nivel) {
		this.nivel = nivel;
	}

	@Column(name = "APROBACION", nullable = false)
	@NotNull
	public Integer getAprobacion() {
		return aprobacion;
	}

	public void setAprobacion(Integer aprobacion) {
		this.aprobacion = aprobacion;
	}

	@Column(name = "NIVEL_REQUERIDO", nullable = false)
	@NotNull
	public Integer getNivelRequerido() {
		return nivelRequerido;
	}

	public void setNivelRequerido(Integer nivelRequerido) {
		this.nivelRequerido = nivelRequerido;
	}

	@Column(name = "ESTADO_ACTUAL")
	public String getEstadoActual() {
		return estadoActual;
	}

	public void setEstadoActual(String estadoActual) {
		this.estadoActual = estadoActual;
	}

	@Column(name = "DIAS_LIBRES", nullable = false)
	public Integer getDiasLibres() {
		return diasLibres;
	}

	public void setDiasLibres(Integer diasLibres) {
		this.diasLibres = diasLibres;
	}
	
	/////////// Inicio Cambioooooo Alvaroooo ///////////////
	@Override
	public int hashCode() {
		if(permId == null){
			return 0; 
		}
		return permId.hashCode();
	}

	@Override
	public boolean equals(Object obj) {
		Permiso other = (Permiso) obj;
		if((other.getPermId() == null) && (permId != null)){
			return false;			
		}		
		return other.getPermId().equals(this.getPermId());
	}	
/////////////////////Fin Cambio///////////////////////////

}
