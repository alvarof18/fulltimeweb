package com.casapazmino.fulltime.model;

// Generated 12-Jan-2011 12:14:41 PM by Hibernate Tools 3.2.4.GA

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.TableGenerator;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.validator.Email;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

import com.casapazmino.fulltime.seguridad.model.Usuarios;

/**
 * Empleado generated by hbm2java
 */
@Entity
@Table(name = "empleado")
public class Empleado implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	
	private Long emplId;
	private Empleado empleado;
	private Cargo cargo;
	private Reloj reloj;
	private EmpleadoGrupo empleadoGrupo;
	private Departamento departamento;
	private DetalleTipoParametro detalleTipoParametroByEstadoCivil;
	private Usuarios usuarios;
	private DetalleTipoParametro detalleTipoParametroBySexo;
	private DetalleTipoParametro detalleTipoParametroByEstado;
	private DetalleGrupoContratado detalleGrupoContratado;
	private Ciudad ciudad;
	private String cedula;
	private String apellido;
	private String nombre;
	private String correo;
	private String correoAlternativo;
	private Date fechaNacimiento;
	private Date fechaIngreso;
	private Date fechaSalida;
	private Date fechaContrato;
	private Date fechaUltVacacion;
	private int horasTrabaja;
	private BigDecimal sueldo;
	private String partida;
	private String partidaIndividual;
	private String entradaSalida;
	private Short numeroTimbre;
	private String codigoEmpleado;
	private Integer controlaVacacion; 
	private Set<ProgramaVacacion> programaVacacions = new HashSet<ProgramaVacacion>(
			0);
	private Set<DeclaraBienes> declaraBieneses = new HashSet<DeclaraBienes>(0);
	private Set<SolicitudVacacion> solicitudVacacionsForEmplId = new HashSet<SolicitudVacacion>(
			0);
	private Set<Permiso> permisosForEmplId = new HashSet<Permiso>(0);
	private Set<Asistencia> asistencias = new HashSet<Asistencia>(0);
	private Set<Permiso> permisosForEmpEmplId = new HashSet<Permiso>(0);
	private Set<EmpleadoTitulo> empleadoTitulos = new HashSet<EmpleadoTitulo>(0);
	private Set<Discapacidad> discapacidads = new HashSet<Discapacidad>(0);
	private Set<EmpleadoPeriodoVacacion> empleadoPeriodoVacacions = new HashSet<EmpleadoPeriodoVacacion>(
			0);
	private Set<Contacto> contactos = new HashSet<Contacto>(0);
	private Set<HistLabo> histLabos = new HashSet<HistLabo>(0);
	private Set<Empleado> empleados = new HashSet<Empleado>(0);
	private Set<SolicitudVacacion> solicitudVacacionsForEmpEmplId = new HashSet<SolicitudVacacion>(
			0);
		
	private Set<Planificacion> planificacionsForEmplId = new HashSet<Planificacion>(
			0);
	private Set<Timbre> timbres = new HashSet<Timbre>();
	
	private Set<EmpleadoHorario> empleadoHorarios = new HashSet<EmpleadoHorario>(0);
	
	public Empleado() {
	}

	public Empleado(Cargo cargo, Departamento departamento, EmpleadoGrupo empleadoGrupo,
			DetalleTipoParametro detalleTipoParametroByEstadoCivil,
			Usuarios usuarios, DetalleTipoParametro detalleTipoParametroBySexo,
			DetalleTipoParametro detalleTipoParametroByEstado,
			DetalleGrupoContratado detalleGrupoContratado, Ciudad ciudad,
			String cedula, String apellido, String nombre, String correo, String correoAlternativo,
			Date fechaNacimiento, Date fechaIngreso, int horasTrabaja , Integer controlaVacacion) {
		this.cargo = cargo;
		this.departamento = departamento;
		this.detalleTipoParametroByEstadoCivil = detalleTipoParametroByEstadoCivil;
		this.usuarios = usuarios;
		this.detalleTipoParametroBySexo = detalleTipoParametroBySexo;
		this.detalleTipoParametroByEstado = detalleTipoParametroByEstado;
		this.detalleGrupoContratado = detalleGrupoContratado;
		this.ciudad = ciudad;
		this.cedula = cedula;
		this.apellido = apellido;
		this.nombre = nombre;
		this.correo = correo;
		this.correoAlternativo = correoAlternativo;
		this.fechaNacimiento = fechaNacimiento;
		this.fechaIngreso = fechaIngreso;
		this.horasTrabaja = horasTrabaja;
		this.controlaVacacion = controlaVacacion;
		this.empleadoGrupo = empleadoGrupo;
	}

	public Empleado(Empleado empleado, Cargo cargo, Reloj reloj,
			Departamento departamento, EmpleadoGrupo empleadoGrupo,
			DetalleTipoParametro detalleTipoParametroByEstadoCivil,
			Usuarios usuarios, DetalleTipoParametro detalleTipoParametroBySexo,
			DetalleTipoParametro detalleTipoParametroByEstado,
			DetalleGrupoContratado detalleGrupoContratado, Ciudad ciudad,
			String cedula, String apellido, String nombre, String correo, String correoAlternativo,
			Date fechaNacimiento, Date fechaIngreso, Date fechaSalida,
			Date fechaContrato, Date fechaUltVacacion, int horasTrabaja,
			BigDecimal sueldo, String partida, String partidaIndividual,
			String entradaSalida, Short numeroTimbre, String codigoEmpleado, Integer controlaVacacion,
			Set<EmpleadoHorario> empleadoHorarios,
			Set<ProgramaVacacion> programaVacacions,
			Set<DeclaraBienes> declaraBieneses,
			Set<SolicitudVacacion> solicitudVacacionsForEmplId,
			Set<Permiso> permisosForEmplId, Set<Asistencia> asistencias, Set<Planificacion> planificacionsForEmplId,
			Set<Permiso> permisosForEmpEmplId,
			Set<EmpleadoTitulo> empleadoTitulos,
			Set<Discapacidad> discapacidads,
			Set<EmpleadoPeriodoVacacion> empleadoPeriodoVacacions,
			Set<Contacto> contactos, Set<Empleado> empleados, Set<HistLabo> histLabos,
			Set<SolicitudVacacion> solicitudVacacionsForEmpEmplId,
			Set<Timbre> timbres) {
		this.empleado = empleado;
		this.cargo = cargo;
		this.reloj = reloj;
		this.departamento = departamento;
		this.detalleTipoParametroByEstadoCivil = detalleTipoParametroByEstadoCivil;
		this.usuarios = usuarios;
		this.detalleTipoParametroBySexo = detalleTipoParametroBySexo;
		this.detalleTipoParametroByEstado = detalleTipoParametroByEstado;
		this.detalleGrupoContratado = detalleGrupoContratado;
		this.ciudad = ciudad;
		this.cedula = cedula;
		this.apellido = apellido;
		this.nombre = nombre;
		this.correo = correo;
		this.correoAlternativo = correoAlternativo;
		this.fechaNacimiento = fechaNacimiento;
		this.fechaIngreso = fechaIngreso;
		this.fechaSalida = fechaSalida;
		this.fechaContrato = fechaContrato;
		this.fechaUltVacacion = fechaUltVacacion;
		this.horasTrabaja = horasTrabaja;
		this.sueldo = sueldo;
		this.partida = partida;
		this.partidaIndividual = partidaIndividual;
		this.entradaSalida = entradaSalida;
		this.numeroTimbre = numeroTimbre;
		this.codigoEmpleado = codigoEmpleado;
		this.controlaVacacion = controlaVacacion;
		this.programaVacacions = programaVacacions;
		this.declaraBieneses = declaraBieneses;
		this.solicitudVacacionsForEmplId = solicitudVacacionsForEmplId;
		this.permisosForEmplId = permisosForEmplId;
		this.asistencias = asistencias;
		this.planificacionsForEmplId = planificacionsForEmplId;
		this.permisosForEmpEmplId = permisosForEmpEmplId;
		this.empleadoTitulos = empleadoTitulos;
		this.discapacidads = discapacidads;
		this.empleadoPeriodoVacacions = empleadoPeriodoVacacions;
		this.contactos = contactos;
		this.histLabos = histLabos;		
		this.empleados = empleados;
		this.solicitudVacacionsForEmpEmplId = solicitudVacacionsForEmpEmplId;
		this.timbres = timbres;
		this.empleadoHorarios = empleadoHorarios;
		this.empleadoGrupo = empleadoGrupo;
	}

	@Id
	@TableGenerator(name = "IDEMPLEADO", table = "contadores", pkColumnName = "ID", pkColumnValue = "18", valueColumnName = "CONTADOR", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "IDEMPLEADO")
	@Column(name = "EMPL_ID", unique = true, nullable = false)
	public Long getEmplId() {
		return this.emplId;
	}

	public void setEmplId(Long emplId) {
		this.emplId = emplId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EMP_EMPL_ID")
	public Empleado getEmpleado() {
		return this.empleado;
	}

	public void setEmpleado(Empleado empleado) {
		this.empleado = empleado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CARG_ID", nullable = false)
	@NotNull
	public Cargo getCargo() {
		return this.cargo;
	}

	public void setCargo(Cargo cargo) {
		this.cargo = cargo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EMGR_ID", nullable = true)
//	@NotNull
	public EmpleadoGrupo getEmpleadoGrupo() {
		return this.empleadoGrupo;
	}

	public void setEmpleadoGrupo(EmpleadoGrupo empleadoGrupo) {
		this.empleadoGrupo = empleadoGrupo;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RELO_ID")
	public Reloj getReloj() {
		return this.reloj;
	}

	public void setReloj(Reloj reloj) {
		this.reloj = reloj;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DEPA_ID", nullable = false)
	@NotNull
	public Departamento getDepartamento() {
		if (this.departamento == null){
			this.departamento = new Departamento();
		}
		return this.departamento;
	}

	public void setDepartamento(Departamento departamento) {
		this.departamento = departamento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ESTADO_CIVIL", nullable = false)
	@NotNull
	public DetalleTipoParametro getDetalleTipoParametroByEstadoCivil() {
		return this.detalleTipoParametroByEstadoCivil;
	}

	public void setDetalleTipoParametroByEstadoCivil(
			DetalleTipoParametro detalleTipoParametroByEstadoCivil) {
		this.detalleTipoParametroByEstadoCivil = detalleTipoParametroByEstadoCivil;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID", nullable = false)
	@NotNull
	public Usuarios getUsuarios() {
		if (usuarios == null){
			usuarios = new Usuarios();
		}
		return this.usuarios;
	}

	public void setUsuarios(Usuarios usuarios) {
		this.usuarios = usuarios;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SEXO", nullable = false)
	@NotNull
	public DetalleTipoParametro getDetalleTipoParametroBySexo() {
		return this.detalleTipoParametroBySexo;
	}

	public void setDetalleTipoParametroBySexo(
			DetalleTipoParametro detalleTipoParametroBySexo) {
		this.detalleTipoParametroBySexo = detalleTipoParametroBySexo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ESTADO", nullable = false)
	@NotNull
	public DetalleTipoParametro getDetalleTipoParametroByEstado() {
		
		if(this.detalleTipoParametroByEstado == null){
			this.detalleTipoParametroByEstado = new DetalleTipoParametro();
		}
		return this.detalleTipoParametroByEstado;
	}

	public void setDetalleTipoParametroByEstado(
			DetalleTipoParametro detalleTipoParametroByEstado) {
		this.detalleTipoParametroByEstado = detalleTipoParametroByEstado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DGCO_ID", nullable = false)
	@NotNull
	public DetalleGrupoContratado getDetalleGrupoContratado() {
		return this.detalleGrupoContratado;
	}

	public void setDetalleGrupoContratado(
			DetalleGrupoContratado detalleGrupoContratado) {
		this.detalleGrupoContratado = detalleGrupoContratado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CIUD_ID", nullable = false)
	@NotNull
	public Ciudad getCiudad() {
		return this.ciudad;
	}

	public void setCiudad(Ciudad ciudad) {
		this.ciudad = ciudad;
	}
		
	@Column(name = "CEDULA", nullable = false, length = 10)
	@NotNull
	@Length(max = 10)
	public String getCedula() {
		return this.cedula;
	}

	public void setCedula(String cedula) {
		this.cedula = cedula;
	}

	@Column(name = "APELLIDO", nullable = false)
	@NotNull
	public String getApellido() {
		return this.apellido;
	}

	public void setApellido(String apellido) {
		this.apellido = apellido;
	}

	@Column(name = "NOMBRE", nullable = false)
	@NotNull
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "CORREO", nullable = false)
	@NotNull
	@Email
	public String getCorreo() {
		return this.correo;
	}

	public void setCorreo(String correo) {
		this.correo = correo;
	}
	
	@Column(name = "CORREO_ALTERNATIVO", nullable = true)
	@Email
	public String getCorreoAlternativo() {
		return correoAlternativo;
	}

	public void setCorreoAlternativo(String correoAlternativo) {
		this.correoAlternativo = correoAlternativo;
	}		

	@Temporal(TemporalType.DATE)
	@Column(name = "FECHA_NACIMIENTO", nullable = false, length = 10)
	@NotNull
	public Date getFechaNacimiento() {
		return this.fechaNacimiento;
	}

	public void setFechaNacimiento(Date fechaNacimiento) {
		this.fechaNacimiento = fechaNacimiento;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "FECHA_INGRESO", nullable = true, length = 10)
	public Date getFechaIngreso() {
		return this.fechaIngreso;
	}

	public void setFechaIngreso(Date fechaIngreso) {
		this.fechaIngreso = fechaIngreso;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "FECHA_SALIDA", length = 10)
	public Date getFechaSalida() {
		return this.fechaSalida;
	}

	public void setFechaSalida(Date fechaSalida) {
		this.fechaSalida = fechaSalida;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "FECHA_CONTRATO", length = 10)
	public Date getFechaContrato() {
		return this.fechaContrato;
	}

	public void setFechaContrato(Date fechaContrato) {
		this.fechaContrato = fechaContrato;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "FECHA_ULT_VACACION", length = 10)
	public Date getFechaUltVacacion() {
		return this.fechaUltVacacion;
	}

	public void setFechaUltVacacion(Date fechaUltVacacion) {
		this.fechaUltVacacion = fechaUltVacacion;
	}

	@Column(name = "HORAS_TRABAJA", nullable = false)
	@NotNull
	public int getHorasTrabaja() {
		return this.horasTrabaja;
	}

	public void setHorasTrabaja(int horasTrabaja) {
		this.horasTrabaja = horasTrabaja;
	}

	@Column(name = "SUELDO", precision = 2, nullable = false)
	@NotNull
	public BigDecimal getSueldo() {
		return this.sueldo;
	}

	public void setSueldo(BigDecimal sueldo) {
		this.sueldo = sueldo;
	}

	@Column(name = "PARTIDA")
	public String getPartida() {
		return this.partida;
	}

	public void setPartida(String partida) {
		this.partida = partida;
	}

	@Column(name = "PARTIDA_INDIVIDUAL")
	public String getPartidaIndividual() {
		return this.partidaIndividual;
	}

	public void setPartidaIndividual(String partidaIndividual) {
		this.partidaIndividual = partidaIndividual;
	}

	@Column(name = "ENTRADA_SALIDA", length = 1)
	@Length(max = 1)
	public String getEntradaSalida() {
		return this.entradaSalida;
	}

	public void setEntradaSalida(String entradaSalida) {
		this.entradaSalida = entradaSalida;
	}

	@Column(name = "NUMERO_TIMBRE")
	public Short getNumeroTimbre() {
		return this.numeroTimbre;
	}

	public void setNumeroTimbre(Short numeroTimbre) {
		this.numeroTimbre = numeroTimbre;
	}


//	@Pattern(regex="[0-9]+")
	
	@Column(name = "CODIGO_EMPLEADO", length = 20)
	@Length(max = 20)
	public String getCodigoEmpleado() {
		return this.codigoEmpleado;
	}

	public void setCodigoEmpleado(String codigoEmpleado) {
		this.codigoEmpleado = codigoEmpleado;
	}

	@Column(name = "CONTROLA_VACACION", nullable = false)
	@NotNull
	public Integer getControlaVacacion() {
		return controlaVacacion;
	}

	public void setControlaVacacion(Integer controlaVacacion) {
		this.controlaVacacion = controlaVacacion;
	}
	

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empleado")
	public Set<ProgramaVacacion> getProgramaVacacions() {
		return this.programaVacacions;
	}

	public void setProgramaVacacions(Set<ProgramaVacacion> programaVacacions) {
		this.programaVacacions = programaVacacions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empleado")
	public Set<DeclaraBienes> getDeclaraBieneses() {
		return this.declaraBieneses;
	}

	public void setDeclaraBieneses(Set<DeclaraBienes> declaraBieneses) {
		this.declaraBieneses = declaraBieneses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empleadoByEmplId")
	public Set<SolicitudVacacion> getSolicitudVacacionsForEmplId() {
		return this.solicitudVacacionsForEmplId;
	}

	public void setSolicitudVacacionsForEmplId(
			Set<SolicitudVacacion> solicitudVacacionsForEmplId) {
		this.solicitudVacacionsForEmplId = solicitudVacacionsForEmplId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empleadoByEmplId")
	public Set<Permiso> getPermisosForEmplId() {
		return this.permisosForEmplId;
	}

	public void setPermisosForEmplId(Set<Permiso> permisosForEmplId) {
		this.permisosForEmplId = permisosForEmplId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empleado")
	public Set<Asistencia> getAsistencias() {
		return this.asistencias;
	}

	public void setAsistencias(Set<Asistencia> asistencias) {
		this.asistencias = asistencias;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empleadoByEmpEmplId")
	public Set<Permiso> getPermisosForEmpEmplId() {
		return this.permisosForEmpEmplId;
	}

	public void setPermisosForEmpEmplId(Set<Permiso> permisosForEmpEmplId) {
		this.permisosForEmpEmplId = permisosForEmpEmplId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empleado")
	public Set<EmpleadoTitulo> getEmpleadoTitulos() {
		return this.empleadoTitulos;
	}

	public void setEmpleadoTitulos(Set<EmpleadoTitulo> empleadoTitulos) {
		this.empleadoTitulos = empleadoTitulos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empleado")
	public Set<Discapacidad> getDiscapacidads() {
		return this.discapacidads;
	}

	public void setDiscapacidads(Set<Discapacidad> discapacidads) {
		this.discapacidads = discapacidads;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empleado")
	public Set<EmpleadoPeriodoVacacion> getEmpleadoPeriodoVacacions() {
		return this.empleadoPeriodoVacacions;
	}

	public void setEmpleadoPeriodoVacacions(
			Set<EmpleadoPeriodoVacacion> empleadoPeriodoVacacions) {
		this.empleadoPeriodoVacacions = empleadoPeriodoVacacions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empleado")
	public Set<Contacto> getContactos() {
		return this.contactos;
	}

	public void setContactos(Set<Contacto> contactos) {
		this.contactos = contactos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empleado")
	public Set<Empleado> getEmpleados() {
		return this.empleados;
	}

	public void setEmpleados(Set<Empleado> empleados) {
		this.empleados = empleados;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empleadoByEmpEmplId")
	public Set<SolicitudVacacion> getSolicitudVacacionsForEmpEmplId() {
		return this.solicitudVacacionsForEmpEmplId;
	}

	public void setSolicitudVacacionsForEmpEmplId(
			Set<SolicitudVacacion> solicitudVacacionsForEmpEmplId) {
		this.solicitudVacacionsForEmpEmplId = solicitudVacacionsForEmpEmplId;
	}
	
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "empleadoByEmplId")
	public Set<Planificacion> getPlanificacionsForEmplId() {
		return this.planificacionsForEmplId;
	}

	public void setPlanificacionsForEmplId(
			Set<Planificacion> planificacionsForEmplId) {
		this.planificacionsForEmplId = planificacionsForEmplId;
	}
		
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empleado")
	public Set<EmpleadoHorario> getEmpleadoHorarios() {
		return this.empleadoHorarios;
	}

	public void setEmpleadoHorarios(Set<EmpleadoHorario> empleadoHorarios) {
		this.empleadoHorarios = empleadoHorarios;
	}	
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empleado")
	public Set<HistLabo> getHistLabos() {
		return this.histLabos;
	}

	public void setHistLabos(Set<HistLabo> histLabos) {
		this.histLabos = histLabos;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empleado")
	public Set<Timbre> getTimbres() {
		return timbres;
	}

	public void setTimbres(Set<Timbre> timbres) {
		this.timbres = timbres;
	}
	
	

//	@Override
//	public String toString() {
//		return "Empleado [emplId=" + emplId + ", empleado=" + empleado.getEmpleado().getApellido()
//				+ ", cargo=" + cargo.getDescripcion() + ", departamento="
//				+ departamento.getDescripcion() + ", detalleTipoParametroByEstadoCivil="
//				+ detalleTipoParametroByEstadoCivil.getDescripcion() + ", usuarios=" + usuarios.getUsuario()
//				+ ", detalleTipoParametroBySexo=" + detalleTipoParametroBySexo.getDescripcion()
//				+ ", detalleTipoParametroByEstado="
//				+ detalleTipoParametroByEstado.getDescripcion() + ", detalleGrupoContratado="
//				+ detalleGrupoContratado.getDescripcion() + ", ciudad=" + ciudad.getDescripcion() + ", cedula="
//				+ cedula + ", apellido=" + apellido + ", nombre=" + nombre
//				+ ", correo=" + correo + ", fechaNacimiento=" + fechaNacimiento
//				+ ", fechaIngreso=" + fechaIngreso + ", fechaSalida="
//				+ fechaSalida + ", horasTrabaja=" + horasTrabaja
//				+ ", codigoEmpleado=" + codigoEmpleado + "]";
//	}

	
	@Override
	public String toString() {
		return "emplId=" + emplId + ", cedula="
				+ cedula + ", apellido=" + apellido + ", nombre=" + nombre
				+ ", correo=" + correo + ", fechaNacimiento=" + fechaNacimiento
				+ ", horasTrabaja=" + horasTrabaja
				+ ", codigoEmpleado=" + codigoEmpleado;
	}
	
}