package com.casapazmino.fulltime.action;

import com.casapazmino.fulltime.model.*;
import org.jboss.seam.annotations.In;
import org.jboss.seam.annotations.Name;
import org.jboss.seam.annotations.Transactional;
import org.jboss.seam.core.Expressions;
import org.jboss.seam.framework.EntityHome;
import org.jboss.seam.persistence.PersistenceProvider;

@Name("contactoHome")
public class ContactoHome extends EntityHome<Contacto> {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	@In(create = true)
	DetalleTipoParametroHome detalleTipoParametroHome;
	@In(create = true)
	EmpleadoHome empleadoHome;

	@Override
	protected void initDefaultMessages() {
		Expressions expressions = new Expressions();
		if (getCreatedMessage() == null) { setCreatedMessage(expressions.createValueExpression("#{messages['mensaje.grabar']}")); }
		if (getUpdatedMessage() == null) { setUpdatedMessage(expressions.createValueExpression("#{messages['mensaje.actualizar']}")); }
		if (getDeletedMessage() == null) { setDeletedMessage(expressions.createValueExpression("#{messages['mensaje.eliminar']}")); }
	}

	public void setContactoContId(Long id) {
		setId(id);
	}

	public Long getContactoContId() {
		return (Long) getId();
	}

	@Override
	protected Contacto createInstance() {
		Contacto contacto = new Contacto();
		return contacto;
	}

	public void wire() {
		getInstance();
		DetalleTipoParametro detalleTipoParametro = detalleTipoParametroHome
				.getDefinedInstance();
		if (detalleTipoParametro != null) {
			getInstance().setDetalleTipoParametro(detalleTipoParametro);
		}
		Empleado empleado = empleadoHome.getDefinedInstance();
		if (empleado != null) {
			getInstance().setEmpleado(empleado);
		}
	}

	public boolean isWired() {
		if (getInstance().getEmpleado() == null)
			return false;
		return true;
	}

	public Contacto getDefinedInstance() {
		return isIdDefined() ? getInstance() : null;
	}
	
	@Transactional
	public String persist()
	{
		getEntityManager().persist(getInstance());
		getEntityManager().flush();
		assignId(PersistenceProvider.instance().getId(getInstance(),getEntityManager()));
		raiseAfterTransactionSuccessEvent();
		return "persisted";
	}
}
