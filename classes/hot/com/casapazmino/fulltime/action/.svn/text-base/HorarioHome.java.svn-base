package com.casapazmino.fulltime.action;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.EntityManager;

import org.jboss.seam.annotations.In;
import org.jboss.seam.annotations.Name;
import org.jboss.seam.core.Expressions;
import org.jboss.seam.faces.FacesMessages;
import org.jboss.seam.framework.EntityHome;

import com.casapazmino.fulltime.model.DetalleHorario;
import com.casapazmino.fulltime.model.Horario;

@Name("horarioHome")
public class HorarioHome extends EntityHome<Horario> {

	private static final long serialVersionUID = 1L;

	@In
	EntityManager entityManager;
	
	@Override
	protected void initDefaultMessages() {
		Expressions expressions = new Expressions();
		if (getCreatedMessage() == null) { setCreatedMessage(expressions.createValueExpression("#{messages['mensaje.grabar']}")); }
		if (getUpdatedMessage() == null) { setUpdatedMessage(expressions.createValueExpression("#{messages['mensaje.actualizar']}")); }
		if (getDeletedMessage() == null) { setDeletedMessage(expressions.createValueExpression("#{messages['mensaje.eliminar']}")); }
	}

	public void setHorarioHoraId(Long id) {
		setId(id);
	}

	public Long getHorarioHoraId() {
		return (Long) getId();
	}

	@Override
	protected Horario createInstance() {
		Horario horario = new Horario();
		return horario;
	}

	public void wire() {
		getInstance();
	}

	public boolean isWired() {
		return true;
	}

	public Horario getDefinedInstance() {
		return isIdDefined() ? getInstance() : null;
	}

	@Override
	public String remove(){
		try {
			super.remove();
		} catch (Exception e) {
			FacesMessages.instance().add("Error al borrar registro");
		}
		return "removed";
	}
	
	@SuppressWarnings("unchecked")
	public void buscarDetalleHorario (){
		List<DetalleHorario> detalleHorario = new ArrayList<DetalleHorario>();
		detalleHorario = entityManager.createQuery(
		 "SELECT dh FROM DetalleHorario dh JOIN dh.horario h where h.descripcion=#{planificacion}")
		.getResultList(); 
		
		
//		"SELECT dh FROM DetalleHorario dh")	
		
		//detalleHorario = this.getDetalleHorarios();
		
	}
	
	public List<DetalleHorario> getDetalleHorarios() {
		return getInstance() == null ? null : new ArrayList<DetalleHorario>(
				getInstance().getDetalleHorarios());
	}

}
