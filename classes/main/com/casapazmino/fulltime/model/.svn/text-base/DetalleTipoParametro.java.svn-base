package com.casapazmino.fulltime.model;

// Generated 12-Jan-2011 12:14:41 PM by Hibernate Tools 3.2.4.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

import com.casapazmino.fulltime.seguridad.model.Usuarios;

/**
 * DetalleTipoParametro generated by hbm2java
 */
@Entity
@Table(name = "detalle_tipo_parametro", catalog = "fulltime")
public class DetalleTipoParametro implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	
	private Long dtpaId;
	private TipoParametro tipoParametro;
	private String descripcion;
	private String valor1;
	private BigDecimal valor2;
	private BigDecimal valor3;
	private BigDecimal valor4;
	private Set<ProgramaVacacion> programaVacacions = new HashSet<ProgramaVacacion>(
			0);
	private Set<SolicitudVacacion> solicitudVacacionsForAutorizado = new HashSet<SolicitudVacacion>(
			0);
	private Set<SolicitudVacacion> solicitudVacacionsForPeriodo = new HashSet<SolicitudVacacion>(
			0);
	private Set<Empleado> empleadosForEstadoCivil = new HashSet<Empleado>(0);
	private Set<Permiso> permisosForDtpaId = new HashSet<Permiso>(0);
	private Set<Contacto> contactos = new HashSet<Contacto>(0);
	private Set<Permiso> permisosForAutorizado = new HashSet<Permiso>(0);
	private Set<EmpleadoPeriodoVacacion> empleadoPeriodoVacacions = new HashSet<EmpleadoPeriodoVacacion>(
			0);
	private Set<Cargo> cargos = new HashSet<Cargo>(0);
	private Set<Empleado> empleadosForSexo = new HashSet<Empleado>(0);
	private Set<Empleado> empleadosForEstado = new HashSet<Empleado>(0);
	private Set<Usuarios> usuarioses = new HashSet<Usuarios>(0);
	private Set<EmpleadoTitulo> empleadoTitulos = new HashSet<EmpleadoTitulo>(0);

	public DetalleTipoParametro() {
	}

	public DetalleTipoParametro(TipoParametro tipoParametro, String descripcion) {
		this.tipoParametro = tipoParametro;
		this.descripcion = descripcion;
	}
	public DetalleTipoParametro(TipoParametro tipoParametro,
			String descripcion, String valor1, BigDecimal valor2,
			BigDecimal valor3, BigDecimal valor4,
			Set<ProgramaVacacion> programaVacacions,
			Set<SolicitudVacacion> solicitudVacacionsForAutorizado,
			Set<SolicitudVacacion> solicitudVacacionsForPeriodo,
			Set<Empleado> empleadosForEstadoCivil,
			Set<Permiso> permisosForDtpaId, Set<Contacto> contactos,
			Set<Permiso> permisosForAutorizado,
			Set<EmpleadoPeriodoVacacion> empleadoPeriodoVacacions,
			Set<Cargo> cargos, Set<Empleado> empleadosForSexo,
			Set<Empleado> empleadosForEstado, Set<Usuarios> usuarioses,
			Set<EmpleadoTitulo> empleadoTitulos) {
		this.tipoParametro = tipoParametro;
		this.descripcion = descripcion;
		this.valor1 = valor1;
		this.valor2 = valor2;
		this.valor3 = valor3;
		this.valor4 = valor4;
		this.programaVacacions = programaVacacions;
		this.solicitudVacacionsForAutorizado = solicitudVacacionsForAutorizado;
		this.solicitudVacacionsForPeriodo = solicitudVacacionsForPeriodo;
		this.empleadosForEstadoCivil = empleadosForEstadoCivil;
		this.permisosForDtpaId = permisosForDtpaId;
		this.contactos = contactos;
		this.permisosForAutorizado = permisosForAutorizado;
		this.empleadoPeriodoVacacions = empleadoPeriodoVacacions;
		this.cargos = cargos;
		this.empleadosForSexo = empleadosForSexo;
		this.empleadosForEstado = empleadosForEstado;
		this.usuarioses = usuarioses;
		this.empleadoTitulos = empleadoTitulos;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "DTPA_ID", unique = true, nullable = false)
	public Long getDtpaId() {
		return this.dtpaId;
	}

	public void setDtpaId(Long dtpaId) {
		this.dtpaId = dtpaId;
	}
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TIPA_ID", nullable = false)
	@NotNull
	public TipoParametro getTipoParametro() {
		return this.tipoParametro;
	}

	public void setTipoParametro(TipoParametro tipoParametro) {
		this.tipoParametro = tipoParametro;
	}

	@Column(name = "DESCRIPCION", nullable = false)
	@NotNull
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@Column(name = "VALOR1", length = 10)
	@Length(max = 10)
	public String getValor1() {
		return this.valor1;
	}

	public void setValor1(String valor1) {
		this.valor1 = valor1;
	}

	@Column(name = "VALOR2", precision = 8)
	public BigDecimal getValor2() {
		return this.valor2;
	}

	public void setValor2(BigDecimal valor2) {
		this.valor2 = valor2;
	}

	@Column(name = "VALOR3", precision = 8)
	public BigDecimal getValor3() {
		return this.valor3;
	}

	public void setValor3(BigDecimal valor3) {
		this.valor3 = valor3;
	}

	@Column(name = "VALOR4", precision = 8)
	public BigDecimal getValor4() {
		return this.valor4;
	}

	public void setValor4(BigDecimal valor4) {
		this.valor4 = valor4;
	}
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "detalleTipoParametro")
	public Set<ProgramaVacacion> getProgramaVacacions() {
		return this.programaVacacions;
	}

	public void setProgramaVacacions(Set<ProgramaVacacion> programaVacacions) {
		this.programaVacacions = programaVacacions;
	}
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "detalleTipoParametroByAutorizado")
	public Set<SolicitudVacacion> getSolicitudVacacionsForAutorizado() {
		return this.solicitudVacacionsForAutorizado;
	}

	public void setSolicitudVacacionsForAutorizado(
			Set<SolicitudVacacion> solicitudVacacionsForAutorizado) {
		this.solicitudVacacionsForAutorizado = solicitudVacacionsForAutorizado;
	}
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "detalleTipoParametroByPeriodo")
	public Set<SolicitudVacacion> getSolicitudVacacionsForPeriodo() {
		return this.solicitudVacacionsForPeriodo;
	}

	public void setSolicitudVacacionsForPeriodo(
			Set<SolicitudVacacion> solicitudVacacionsForPeriodo) {
		this.solicitudVacacionsForPeriodo = solicitudVacacionsForPeriodo;
	}
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "detalleTipoParametroByEstadoCivil")
	public Set<Empleado> getEmpleadosForEstadoCivil() {
		return this.empleadosForEstadoCivil;
	}

	public void setEmpleadosForEstadoCivil(Set<Empleado> empleadosForEstadoCivil) {
		this.empleadosForEstadoCivil = empleadosForEstadoCivil;
	}
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "detalleTipoParametroByDtpaId")
	public Set<Permiso> getPermisosForDtpaId() {
		return this.permisosForDtpaId;
	}

	public void setPermisosForDtpaId(Set<Permiso> permisosForDtpaId) {
		this.permisosForDtpaId = permisosForDtpaId;
	}
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "detalleTipoParametro")
	public Set<Contacto> getContactos() {
		return this.contactos;
	}

	public void setContactos(Set<Contacto> contactos) {
		this.contactos = contactos;
	}
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "detalleTipoParametroByAutorizado")
	public Set<Permiso> getPermisosForAutorizado() {
		return this.permisosForAutorizado;
	}

	public void setPermisosForAutorizado(Set<Permiso> permisosForAutorizado) {
		this.permisosForAutorizado = permisosForAutorizado;
	}
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "detalleTipoParametro")
	public Set<EmpleadoPeriodoVacacion> getEmpleadoPeriodoVacacions() {
		return this.empleadoPeriodoVacacions;
	}

	public void setEmpleadoPeriodoVacacions(
			Set<EmpleadoPeriodoVacacion> empleadoPeriodoVacacions) {
		this.empleadoPeriodoVacacions = empleadoPeriodoVacacions;
	}
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "detalleTipoParametro")
	public Set<Cargo> getCargos() {
		return this.cargos;
	}

	public void setCargos(Set<Cargo> cargos) {
		this.cargos = cargos;
	}
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "detalleTipoParametroBySexo")
	public Set<Empleado> getEmpleadosForSexo() {
		return this.empleadosForSexo;
	}

	public void setEmpleadosForSexo(Set<Empleado> empleadosForSexo) {
		this.empleadosForSexo = empleadosForSexo;
	}
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "detalleTipoParametroByEstado")
	public Set<Empleado> getEmpleadosForEstado() {
		return this.empleadosForEstado;
	}

	public void setEmpleadosForEstado(Set<Empleado> empleadosForEstado) {
		this.empleadosForEstado = empleadosForEstado;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "estado")
	public Set<Usuarios> getUsuarioses() {
		return this.usuarioses;
	}

	public void setUsuarioses(Set<Usuarios> usuarioses) {
		this.usuarioses = usuarioses;
	}
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "detalleTipoParametro")
	public Set<EmpleadoTitulo> getEmpleadoTitulos() {
		return this.empleadoTitulos;
	}

	public void setEmpleadoTitulos(Set<EmpleadoTitulo> empleadoTitulos) {
		this.empleadoTitulos = empleadoTitulos;
	}

}
